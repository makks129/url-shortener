version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    command: npm run dev
    volumes:
      - ./src:/app/src
      - ./dist:/app/dist
      - ./test:/app/test
      - ./package.json:/app/package.json
      - ./tsconfig.json:/app/tsconfig.json
      - ./jest.config.ts:/app/jest.config.ts
    environment:
      - NODE_ENV=development
      - NODE_OPTIONS=--inspect=0.0.0.0:9229
      - LOG_LEVEL=debug
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_USER=url-shortener
      - DB_PASSWORD=password
      - DB_NAME=url-shortener
    ports:
      - "3000:3000"
      - "9229:9229" # debug
    networks:
      - url-shortener-network
    labels:
      - "prometheus.scrape=true"
      - "prometheus.port=3000"
      - "prometheus.path=/metrics"
    depends_on:
      - mysql

  mysql:
    image: mysql:8.0
    environment:
      - MYSQL_ROOT_PASSWORD=password
      - MYSQL_DATABASE=url-shortener
      - MYSQL_USER=url-shortener
      - MYSQL_PASSWORD=password
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - url-shortener-network
    command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci --sql-mode="STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION" --general-log=1 --general-log-file=/var/log/mysql/query.log

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    networks:
      - url-shortener-network
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3001:3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
      # Reduce Grafana logging
      - GF_LOG_MODE=console
      - GF_LOG_LEVEL=error # Only show error logs (options: debug, info, warn, error, critical)
      - GF_LOG_CONSOLE_FORMAT=text # More readable format instead of JSON
    depends_on:
      - prometheus
    networks:
      - url-shortener-network
    restart: unless-stopped

networks:
  url-shortener-network:
    driver: bridge

volumes:
  mysql-data:
  prometheus-data:
  grafana-data:
